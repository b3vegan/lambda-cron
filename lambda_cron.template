{
    "AWSTemplateFormatVersion": "2010-09-09", 
    "Description": "Deploys a lambda-cron instance per https://github.com/g-a-d/lambdacron", 
    "Parameters": {
        "S3Bucket": {
          "Description": "S3 bucket where the lambda_cron zip file is stored",
          "Type": "String"
        },
        "S3Object": {
          "Description": "key name (filename) of the lambda_cron zip file",
          "Type": "String"
        }
    }, 
    "Resources": {
      "LambdaCronFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
           "Code": {
             "S3Bucket": {"Ref": "S3Bucket"},
             "S3Key": {"Ref": "S3Object"}
           },
           "Description": "Lambda Cron dispatcher function",
           "Handler": "lambda_cron.handler",
           "MemorySize": 128,
           "Role": { "Fn::GetAtt": [ "LambdaCronRole", "Arn" ] },
           "Runtime": "nodejs"
        }
      },
      "LambdaCronInvokePermission": {
         "Type": "AWS::Lambda::Permission",
         "Properties": {
           "FunctionName": {"Fn::GetAtt": ["LambdaCronFunction", "Arn"] },
           "Action": "lambda:InvokeFunction",
           "Principal": "sns.amazonaws.com",
           "SourceAccount": {"Ref": "AWS::AccountId"}
         }
      },
      "LambdaCronAlarm": {
            "Properties": {
                "ActionsEnabled": "True", 
                "AlarmActions": [ { "Ref": "LambdaCronSns" } ], 
                "AlarmDescription": "Alarm that triggers the lambda-cron lambda function", 
                "AlarmName": "LambdaCronAlarm", 
                "ComparisonOperator": "GreaterThanThreshold", 
                "EvaluationPeriods": "1", 
                "InsufficientDataActions": [ { "Ref": "LambdaCronSns" } ], 
                "MetricName": "LambdaCron", 
                "Namespace": "LambdaCron", 
                "OKActions": [ { "Ref": "LambdaCronSns" } ], 
                "Period": "60", 
                "Statistic": "Average", 
                "Threshold": "0.5"
            }, 
            "Type": "AWS::CloudWatch::Alarm"
        }, 
        "LambdaCronRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [ "sts:AssumeRole" ], 
                            "Effect": "Allow", 
                            "Principal": {
                                "Service": [ "lambda.amazonaws.com" ]
                            }
                        }
                    ], 
                    "Version": "2012-10-17"
                }, 
                "Path": "/", 
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [ "logs:*" ], 
                                    "Effect": "Allow", 
                                    "Resource": "arn:aws:logs:*:*:*"
                                }, 
                                { "Action": "*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                    "Action": [ "cloudwatch:PutMetricData" ], 
                                    "Effect": "Allow", 
                                    "Resource": "*"
                                }, 
                                {
                                    "Action": [ "lambda:Invoke", "lambda:InvokeAsync" ], 
                                    "Effect": "Allow", 
                                    "Resource": "arn:aws:lambda:*"
                                }
                            ], 
                            "Version": "2012-10-17"
                        }, 
                        "PolicyName": "root"
                    }
                ]
            }, 
            "Type": "AWS::IAM::Role"
        }, 
        "LambdaCronSns": {
         "DependsOn": "LambdaCronInvokePermission",
            "Properties": {
                "DisplayName": "LambdaCronSns"
            }, 
            "Type": "AWS::SNS::Topic"
        }
    }
}
